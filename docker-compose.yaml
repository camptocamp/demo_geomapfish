---
# The project Docker compose file for development.

version: '2.0'

services:
  config:
    extends:
      file: docker-compose-lib.yaml
      service: config
    environment:
      - TILEGENERATION_S3_BUCKET
      - OSM_PGDATABASE
      - RASTER_BASE_PATH
    volumes:
      - geomapfish:/etc/geomapfish
      - mapserver:/etc/mapserver
      - qgisserver:/etc/qgisserver
      - print-apps:/usr/local/tomcat/webapps/ROOT/print-apps
      - tilegeneration:/etc/tilegeneration
      - gunicorn:/etc/gunicorn
      - haproxy_dev:/etc/haproxy_dev
      - haproxy:/etc/haproxy

  print:
    extends:
      file: docker-compose-lib.yaml
      service: print
    volumes:
      - print-apps:/usr/local/tomcat/webapps/ROOT/print-apps:ro

  mapserver:
    extends:
      file: docker-compose-lib.yaml
      service: mapserver
    entrypoint: []
    volumes:
      - mapserver:/etc/mapserver:ro

  qgisserver:
    extends:
      file: docker-compose-lib.yaml
      service: qgisserver
    volumes:
      - qgisserver:/etc/qgisserver
    environment:
      # Single QGIS project files
      - QGIS_PROJECT_FILE=/etc/qgisserver/project.qgz
      - GEOMAPFISH_OGCSERVER=QGIS server
      # Multiple QGIS project files
      # - QGIS_PROJECT_FILE=
      # - GEOMAPFISH_ACCESSCONTROL_CONFIG=/etc/qgisserver/accesscontrol_config.yaml

  #tinyows:
  #  extends:
  #    file: docker-compose-lib.yaml
  #    service: tinyows
  #  volumes_from:
  #    - config:ro

  # Standalone version
  # redis:
  #   extends:
  #     file: docker-compose-lib.yaml
  #     service: redis

  # To test OpenShift version
  redis_master:
    extends:
      file: docker-compose-lib.yaml
      service: redis_master

  redis_slave:
    extends:
      file: docker-compose-lib.yaml
      service: redis_slave
    depends_on:
      - redis_master

  redis_sentinel:
    extends:
      file: docker-compose-lib.yaml
      service: redis_sentinel
    depends_on:
      - redis_master

  tilecloudchain:
    extends:
      file: docker-compose-lib.yaml
      service: tilecloudchain
    environment:
      - AWS_DEFAULT_REGION
    volumes:
      - tilegeneration:/etc/tilegeneration:ro
      - gunicorn:/etc/gunicorn:ro

  tilegeneration_slave:
    extends:
      file: docker-compose-lib.yaml
      service: tilegeneration_slave
    volumes:
      - tilegeneration:/etc/tilegeneration:ro
      - gunicorn:/etc/gunicorn:ro
    environment:
      - AWS_DEFAULT_REGION

  geoportal:
    extends:
      file: docker-compose-lib.yaml
      service: geoportal
    image: camptocamp/geomapfishapp-geoportal:${DOCKER_TAG}
    volumes:
      - geomapfish:/etc/geomapfish:ro
      - gunicorn:/etc/gunicorn:ro
    environment:
      - PGSCHEMA
      - OSM_PGDATABASE
      - RASTER_BASE_PATH
      - SMTP_USER
      - SMTP_PASSWORD

  alembic:
    extends:
      file: docker-compose-lib.yaml
      service: alembic
    image: camptocamp/geomapfish-geoportal:${DOCKER_TAG}
    environment:
      - PGSCHEMA

  front:
    extends:
      file: docker-compose-lib.yaml
      service: front
    volumes:
      - haproxy_dev:/etc/haproxy_dev:ro
      - haproxy:/etc/haproxy:ro

  # Rich image for project development with e.-g. vim, tree, awscli, psql, ...
  tools:
    volumes:
      - .:/src
      - geomapfish:/etc/geomapfish
      - mapserver:/etc/mapserver
      - print-apps:/usr/local/tomcat/webapps/ROOT/print-apps
      - gunicorn:/etc/gunicorn
      - haproxy_dev:/etc/haproxy_dev
      - haproxy:/etc/haproxy
    extends:
      file: docker-compose-lib.yaml
      service: tools
    environment:
      - PGSCHEMA
      - OSM_PGDATABASE

volumes:
  geomapfish:
  mapserver:
  qgisserver:
  print-apps:
  tilegeneration:
  gunicorn:
  haproxy_dev:
  haproxy:
