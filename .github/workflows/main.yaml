name: Continuous integration

on:
  push:
  pull_request_target:
    types: [labeled]

env:
  PROJECT: demo
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}
  # SENTRY_PROJECT: geomapfish-demo
  # SENTRY_ENVIRONMENT: prod-2-8

jobs:
  main:
    name: Continuous integration
    runs-on: ubuntu-22.04
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: camptocamp/demo_geomapfish_data
          ref: master
          path: data

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{ secrets.CI_GPG_PRIVATE_KEY }}
          github-gopass-ci-token: ${{ secrets.GOPASS_CI_GITHUB_TOKEN }}
          patterns: docker
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - run: touch env.secrets

      - name: Checks
        run: c2cciutils-checks

      - name: Build
        run: ./build

      - name: Application checks
        run: make checks

      - name: Initialize the acceptance tests
        run: make acceptance-init
      - run: c2cciutils-docker-logs
        if: always()

      - name: Run the acceptance tests
        run: make acceptance
      - run: c2cciutils-docker-logs
        if: always()

      - run: make acceptance-dev
      - run: c2cciutils-docker-logs
        if: always()

      - run:
          docker compose --file=docker-compose.yaml --file=docker-compose-db.yaml --file=docker-compose.override.sample.yaml
          up -d
      - name: Run the acceptance tests on dev
        run: make acceptance
      - run: c2cciutils-docker-logs
        if: always()

      # Rebuild the image with the right schema
      - run: rm env.secrets
      - run: touch env.secrets
      - name: Build
        run: ./build --no-pull

      - name: Publish
        run: c2cciutils-publish

      # - name: Create Sentry release
      #   uses: getsentry/action-release@v1
      #   env:
      #     SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      #     SENTRY_ORG: camptocamp
      #     SENTRY_PROJECT: ${{ env.SENTRY_PROJECT }}
      #   with:
      #     environment: ${{ env.SENTRY_ENVIRONMENT }}
      #   if: github.ref == 'refs/heads/prod-2-8'
      - run: git diff --exit-code --patch > /tmp/dpkg-versions.patch || true
        if: failure()
      - uses: actions/upload-artifact@v4
        with:
          name: Update dpkg versions list.patch
          path: /tmp/dpkg-versions.patch
          retention-days: 1
        if: failure()
