---
name: Continuous integration

on:
  push:

env:
  PROJECT: demo
  # Requires CI_GPG_PRIVATE_KEY and GOPASS_CI_GITHUB_TOKEN secrets.
  OPENSHIFT_PROJECT: gs-gmf-demo
  # The release branches
  HELM_RELEASE_NAMES: prod-2-7
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  checks:
    runs-on: ubuntu-20.04
    name: Checks
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v2

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - name: Checks
        run: c2cciutils-checks

  config:
    runs-on: ubuntu-20.04
    name: Config
    timeout-minutes: 10
    needs: checks

    steps:
      - uses: actions/checkout@v2

      - run: touch env.secrets
      - run: sed -i '/^DOCKER_TAG=/d' env.project
      - name: Build config
        run: ./build --service=config

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{ secrets.CI_GPG_PRIVATE_KEY }}
          github-gopass-ci-token: ${{ secrets.GOPASS_CI_GITHUB_TOKEN }}
          patterns: docker
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - name: Publish
        run: c2cciutils-publish --group=config
        if: env.HAS_SECRETS == 'HAS_SECRETS'
      - run: ci/trigger --image=config
        if: env.HAS_SECRETS == 'HAS_SECRETS'

  geoportal:
    runs-on: ubuntu-20.04
    name: Geoportal
    timeout-minutes: 10
    needs: checks

    steps:
      - uses: actions/checkout@v1

      - name: Build geoportal
        run: ./build --service=geoportal
        if: hashFiles('geoportal/Dockerfile') != ''

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{ secrets.CI_GPG_PRIVATE_KEY }}
          github-gopass-ci-token: ${{ secrets.GOPASS_CI_GITHUB_TOKEN }}
          patterns: docker
        if: hashFiles('geoportal/Dockerfile') != '' and env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
        if: hashFiles('geoportal/Dockerfile') != ''
      - run: python3 -m pip install --user --requirement=ci/requirements.txt
        if: hashFiles('geoportal/Dockerfile') != ''
  #      - name: Publish
  #        run: c2cciutils-publish --group=geoportal
  #        if: hashFiles('geoportal/Dockerfile') != ''
  #      - run: ci/trigger --image=geoportal
  #        if: hashFiles('geoportal/Dockerfile') != ''

  custom:
    runs-on: ubuntu-20.04
    name: Custom
    timeout-minutes: 10
    needs: checks

    steps:
      - uses: actions/checkout@v2

      - run: touch env.secrets
      - run: sed -i '/^DOCKER_TAG=/d' env.project
      - name: Build custom
        run: ./build --service=custom

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{ secrets.CI_GPG_PRIVATE_KEY }}
          github-gopass-ci-token: ${{ secrets.GOPASS_CI_GITHUB_TOKEN }}
          patterns: docker
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - name: Publish
        run: c2cciutils-publish --group=custom
        if: env.HAS_SECRETS == 'HAS_SECRETS'
      - run: ci/trigger --image=custom
        if: env.HAS_SECRETS == 'HAS_SECRETS'
