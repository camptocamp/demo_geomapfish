---
name: Rebuild

on:
  schedule:
    - cron: '30 2 * * *'

env:
  PROJECT: demo
  # Requires CI_GPG_PRIVATE_KEY and GOPASS_CI_GITHUB_TOKEN secrets.
  OPENSHIFT_PROJECT: gs-gmf-demo
  # The release branches
  HELM_RELEASE_NAMES: prod-2-7

jobs:
  config:
    runs-on: ubuntu-20.04
    name: Config
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        branch:
          - prod-2-7
          - prod-2-7-simple

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{ secrets.CI_GPG_PRIVATE_KEY }}
          github-gopass-ci-token: ${{ secrets.GOPASS_CI_GITHUB_TOKEN }}
          patterns: docker

      - run: touch env.secrets
      - run: sed -i '/^DOCKER_TAG=/d' env.project
      - name: Build config
        run: ./build --config

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - name: Publish
        run: c2cciutils-publish --group=config --type=rebuild --branch=${{ matrix.branch }}
      - run: ci/trigger --image=config --version=${{ matrix.branch }}
        if: "!contains(matrix.branch, '-simple')"

  geoportal:
    runs-on: ubuntu-20.04
    name: Geoportal
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        branch:
          - prod-2-7

    steps:
      - uses: actions/checkout@v1
        with:
          ref: ${{ matrix.branch }}

      - run: touch env.secrets
      - run: sed -i '/^DOCKER_TAG=/d' env.project
      - name: Build geoportal
        run: ./build --geoportal

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{ secrets.CI_GPG_PRIVATE_KEY }}
          github-gopass-ci-token: ${{ secrets.GOPASS_CI_GITHUB_TOKEN }}
          patterns: docker

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt
#
#      - name: Publish
#        run: c2cciutils-publish --group=geoportal --type=rebuild --branch=${{ matrix.branch }}
#      - run: ci/trigger --image=geoportal --version=${{ matrix.branch }}
