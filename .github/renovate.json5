{
  extends: ['config:base'],
  timezone: 'Europe/Zurich',
  schedule: 'after 5pm on the first day of the month',
  labels: ['dependencies'],
  separateMajorMinor: true,
  separateMinorPatch: true,
  prHourlyLimit: 0,
  prConcurrentLimit: 0,
  lockFileMaintenance: {enabled: true, automerge: true, schedule: 'after 5pm on the first day of the month'},
  baseBranches: [
    'prod-2-7',
    'prod-2-7-advance',
    'prod-2-8',
    'prod-2-8-advance',
    'prod-2-9',
    'prod-2-9-advance',
  ],
  ignorePaths: ['CONST_create_template/**', 'docker-compose-lib.yaml', 'ci/**'],
  'pre-commit': {enabled: true},
  regexManagers: [
    {
      'fileMatch': ['^ci/config\\\\.yaml$'],
      'matchStrings': [
        '.*https://raw\\.githubusercontent\\.com/(?<depName>[^\\s]+)/(?<currentValue>[0-9\\.]+)/.*',
      ],
      'datasourceTemplate': 'github-tags',
    },
    {
      'fileMatch': ['^\\.pre\\-commit\\-config\\.yaml$'],
      'matchStrings': [" +- '?(?<depName>[^' @=]+)(@|==)(?<currentValue>[^' @=]+)'? # (?<datasource>.+)"],
    },
    {
      'fileMatch': ['^ci/dpkg\\-versions\\.yaml$'],
      'matchStrings': [" *(?<depName>[^'\\s]+): '?(?<currentValue>[^'\\s/]*[0-9][^'\\s/]*)'?"],
      'datasourceTemplate': 'repology',
      'versioningTemplate': 'loose',
    },
  ],
  packageRules: [
    /** Docker images versioning */
    {
      matchDatasources: ['docker'],
      versioning: 'loose',
    },
    {
      matchDatasources: ['docker'],
      matchPackageNames: ['node'],
      versioning: 'regex:^(?<major>\\d+)(\\.(?<minor>\\d+)(\\.(?<patch>\\d+))?)?-(?<compatibility>.*)$',
    },
    {
      matchDatasources: ['docker'],
      matchPackageNames: ['ghcr.io/osgeo/gdal'],
      versioning: 'regex:^(?<compatibility>.*)-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)?$',
    },
    /** Automerge the patch, the minor and the dev dependency */
    {
      matchBaseBranches: ['prod-2-8', 'prod-2-8-advance'],
      matchUpdateTypes: ['minor', 'patch'],
      automerge: true,
    },
    {
      matchDepTypes: ['devDependencies'],
      automerge: true,
    },
    /** Group the patch and the minor */
    {
      matchUpdateTypes: ['patch'],
      groupName: 'all patch versions',
    },
    {
      matchUpdateTypes: ['minor'],
      groupName: 'all minor versions',
    },
    /** Accept only the patch on the stabilization branches */
    {
      matchBaseBranches: ['prod-2-7', 'prod-2-7-advance'],
      matchUpdateTypes: ['major', 'minor', 'pin', 'digest', 'rollback', 'bump', 'lockFileMaintenance'],
      enabled: false,
    },
    {
      matchBaseBranches: ['prod-2-7', 'prod-2-7-advance'],
      matchDatasources: ['docker-compose', 'github-actions'],
      enabled: false,
    },
    /** Group Poetry packages */
    {
      matchPackageNames: ['poetry', 'pip'],
      matchPackagePrefixes: ['poetry-'],
      groupName: 'Poetry',
      automerge: true,
      separateMajorMinor: false,
      separateMinorPatch: false,
    },
    {
      'matchPackageNames': ['shellcheck-py/shellcheck-py'],
      'versioning': 'regex:^v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)\\.(?<build>\\d+)$',
    },
  ],
}
