diff --git a/docker-compose.override.sample.yaml b/docker-compose.override.sample.yaml
index 920fb414..3c161918 100644
--- a/docker-compose.override.sample.yaml
+++ b/docker-compose.override.sample.yaml
@@ -5,12 +5,7 @@
 version: '2.0'
 
 services:
-  config:
-    volumes:
-      - './qgisserver:/etc/qgisserver/'
-
   geoportal:
-    image: ${DOCKER_BASE}-geoportal:${DOCKER_TAG}
     user: root
     volumes:
       # For Python project development.
@@ -25,14 +20,10 @@ services:
     environment:
       - GUNICORN_CMD_ARGS=--reload
       - C2CWSGIUTILS_CONFIG=/app/development.ini
-      - C2CGEOPORTAL_LOG_LEVEL=DEBUG
       # - PRINT_URL=http://print:8080/print/
     ports:
       - 5678:5678 # For remote debugging using Visual Studio Code
 
-  alembic:
-    image: ${DOCKER_BASE}-geoportal:${DOCKER_TAG}
-
   # Also uncomment the PRINT_URL in geoportal
   # print:
   #   extends:
diff --git a/geoportal/geomapfish_geoportal/locale/de/LC_MESSAGES/geomapfish_geoportal-client.po b/geoportal/geomapfish_geoportal/locale/de/LC_MESSAGES/geomapfish_geoportal-client.po
index ead0a9b5..ad6c81d7 100644
--- a/geoportal/geomapfish_geoportal/locale/de/LC_MESSAGES/geomapfish_geoportal-client.po
+++ b/geoportal/geomapfish_geoportal/locale/de/LC_MESSAGES/geomapfish_geoportal-client.po
@@ -1216,7 +1216,7 @@ msgid "wood"
 msgstr "Holz"
 
 msgid ""
-"© <a href='http://asit-asso.ch'>ASIT</a>, Contributeurs d’<a href='http://"
+"© <a href='http://asitvd.ch'>ASIT VD</a>, Contributeurs d’<a href='http://"
 "www.openstreetmap.org/copyright'>OpenStreetMap</a>"
 msgstr ""
 
diff --git a/geoportal/geomapfish_geoportal/locale/en/LC_MESSAGES/geomapfish_geoportal-client.po b/geoportal/geomapfish_geoportal/locale/en/LC_MESSAGES/geomapfish_geoportal-client.po
index 07c35682..59f23a13 100644
--- a/geoportal/geomapfish_geoportal/locale/en/LC_MESSAGES/geomapfish_geoportal-client.po
+++ b/geoportal/geomapfish_geoportal/locale/en/LC_MESSAGES/geomapfish_geoportal-client.po
@@ -1217,10 +1217,10 @@ msgid "wood"
 msgstr "Wood"
 
 msgid ""
-"© <a href='http://asit-asso.ch'>ASIT</a>, Contributeurs d’<a href='http://"
+"© <a href='http://asitvd.ch'>ASIT VD</a>, Contributeurs d’<a href='http://"
 "www.openstreetmap.org/copyright'>OpenStreetMap</a>"
 msgstr ""
-"© <a href='http://asit-asso.ch'>ASIT</a>, <a href='http://www.openstreetmap."
+"© <a href='http://asitvd.ch'>ASIT VD</a>, <a href='http://www.openstreetmap."
 "org/copyright'>OpenStreetMap</a> Contributors"
 
 msgid ""
diff --git a/geoportal/geomapfish_geoportal/locale/fr/LC_MESSAGES/geomapfish_geoportal-client.po b/geoportal/geomapfish_geoportal/locale/fr/LC_MESSAGES/geomapfish_geoportal-client.po
index 884d61eb..2372d469 100644
--- a/geoportal/geomapfish_geoportal/locale/fr/LC_MESSAGES/geomapfish_geoportal-client.po
+++ b/geoportal/geomapfish_geoportal/locale/fr/LC_MESSAGES/geomapfish_geoportal-client.po
@@ -387,7 +387,7 @@ msgid "background"
 msgstr "Fond de carte"
 
 msgid "bank"
-msgstr "Banque"
+msgstr "Vide"
 
 msgid "barrier"
 msgstr "Barière"
@@ -1218,7 +1218,7 @@ msgid "wood"
 msgstr "Bois"
 
 msgid ""
-"© <a href='http://asit-asso.ch'>ASIT</a>, Contributeurs d’<a href='http://"
+"© <a href='http://asitvd.ch'>ASIT VD</a>, Contributeurs d’<a href='http://"
 "www.openstreetmap.org/copyright'>OpenStreetMap</a>"
 msgstr ""
 
diff --git a/geoportal/geomapfish_geoportal/locale/it/LC_MESSAGES/geomapfish_geoportal-client.po b/geoportal/geomapfish_geoportal/locale/it/LC_MESSAGES/geomapfish_geoportal-client.po
index 34df1b25..796974f7 100644
--- a/geoportal/geomapfish_geoportal/locale/it/LC_MESSAGES/geomapfish_geoportal-client.po
+++ b/geoportal/geomapfish_geoportal/locale/it/LC_MESSAGES/geomapfish_geoportal-client.po
@@ -1217,7 +1217,7 @@ msgid "wood"
 msgstr ""
 
 msgid ""
-"© <a href='http://asit-asso.ch'>ASIT</a>, Contributeurs d’<a href='http://"
+"© <a href='http://asitvd.ch'>ASIT VD</a>, Contributeurs d’<a href='http://"
 "www.openstreetmap.org/copyright'>OpenStreetMap</a>"
 msgstr ""
 
diff --git a/geoportal/vars.yaml b/geoportal/vars.yaml
index d7f27921..c9becf5d 100644
--- a/geoportal/vars.yaml
+++ b/geoportal/vars.yaml
@@ -1,5 +1,5 @@
 ---
-extends: CONST_vars.yaml
+extends: CONST_vars.yamlsdfsfdgh
 
 vars:
   srid: 2056
diff --git a/print/print-apps/geomapfish/config.yaml.tmpl b/print/print-apps/geomapfish/config.yaml.tmpl
index c71fad2b..623b4f4e 100644
--- a/print/print-apps/geomapfish/config.yaml.tmpl
+++ b/print/print-apps/geomapfish/config.yaml.tmpl
@@ -24,8 +24,6 @@ smtp:
 allowedReferers: &allowedHosts
   ${DISABLE_MUTUALIZED_PRINT}- !hostnameMatch
   ${DISABLE_MUTUALIZED_PRINT}  host: ${MUTUALIZED_PRINT_URL}
-  ${DISABLE_LOCAL_PRINT}- !hostnameMatch
-  ${DISABLE_LOCAL_PRINT}  host: ${VISIBLE_WEB_HOST}
   - !hostnameMatch
     host: geomapfish-demo-2-6.camptocamp.com
   - !hostnameMatch
@@ -100,18 +98,25 @@ templates:
       - !configureHttpRequests &configureHttpRequests
         httpProcessors:
           ## For internal print
+          ${DISABLE_MUTUALIZED_PRINT}- !mapUri
+          ${DISABLE_MUTUALIZED_PRINT}  mapping:
+          ${DISABLE_MUTUALIZED_PRINT}    https?://${VISIBLE_WEB_HOST_RE_ESCAPED}${VISIBLE_ENTRY_POINT_RE_ESCAPED}tiles(.*): "${TILECLOUDCHAIN_INTERNAL_URL}${VISIBLE_ENTRY_POINT}tiles$1"
+          ${DISABLE_MUTUALIZED_PRINT}- !mapUri
+          ${DISABLE_MUTUALIZED_PRINT}  mapping:
+          ${DISABLE_MUTUALIZED_PRINT}    https?://${VISIBLE_WEB_HOST_RE_ESCAPED}${VISIBLE_ENTRY_POINT_RE_ESCAPED}(.*): "${GEOPORTAL_INTERNAL_URL}${VISIBLE_ENTRY_POINT}$1"
+          ${DISABLE_MUTUALIZED_PRINT}- !forwardHeaders
+          ${DISABLE_MUTUALIZED_PRINT}  matchers:
+          ${DISABLE_MUTUALIZED_PRINT}    - !hostnameMatch
+          ${DISABLE_MUTUALIZED_PRINT}      host: ${GEOPORTAL_INTERNAL_HOST}
+          ${DISABLE_MUTUALIZED_PRINT}      port: ${GEOPORTAL_INTERNAL_PORT}
+          ## For mutualized print
           ${DISABLE_LOCAL_PRINT}- !mapUri
           ${DISABLE_LOCAL_PRINT}  mapping:
-          ${DISABLE_LOCAL_PRINT}    https?://${VISIBLE_WEB_HOST_RE_ESCAPED}${VISIBLE_ENTRY_POINT_RE_ESCAPED}tiles(.*): "${TILECLOUDCHAIN_INTERNAL_URL}${VISIBLE_ENTRY_POINT}tiles$1"
+          ${DISABLE_LOCAL_PRINT}    https?://localhost:8484/tiles(.*): "http://tilecloudchain:8080/tiles$1"
           ${DISABLE_LOCAL_PRINT}- !mapUri
           ${DISABLE_LOCAL_PRINT}  mapping:
-          ${DISABLE_LOCAL_PRINT}    https?://${VISIBLE_WEB_HOST_RE_ESCAPED}${VISIBLE_ENTRY_POINT_RE_ESCAPED}(.*): "${GEOPORTAL_INTERNAL_URL}${VISIBLE_ENTRY_POINT}$1"
-          ${DISABLE_LOCAL_PRINT}- !forwardHeaders
-          ${DISABLE_LOCAL_PRINT}  matchers:
-          ${DISABLE_LOCAL_PRINT}    - !hostnameMatch
-          ${DISABLE_LOCAL_PRINT}      host: ${GEOPORTAL_INTERNAL_HOST}
-          ${DISABLE_LOCAL_PRINT}      port: ${GEOPORTAL_INTERNAL_PORT}
-          ## End for internal print
+          ${DISABLE_LOCAL_PRINT}    https?://localhost:8484/(.*): "http://geoportal:8080/$1"
+          ## End for mutualized print
           - !forwardHeaders
             matchers: *allowedHosts
             headers:
diff --git a/print/print-apps/geomapfish/requestDataA4Portrait.json b/print/print-apps/geomapfish/requestDataA4Portrait.json
index 80d68ee9..5d8ac792 100644
--- a/print/print-apps/geomapfish/requestDataA4Portrait.json
+++ b/print/print-apps/geomapfish/requestDataA4Portrait.json
@@ -6,175 +6,137 @@
             "center": [537667.8392100265, 152527.76089525849],
             "projection": "EPSG:2056",
             "scale": 5000,
-            "layers": [
-                {
-                    "baseURL": "https://geomapfish-demo-2-6.camptocamp.com/mapserv_proxy",
-                    "imageFormat": "image/png",
-                    "layers": [
-                        "osm_hospitals",
-                        "osm_firestations",
-                        "landuse",
-                        "railways"
-                    ],
-                    "customParams": {
-                        "TRANSPARENT": "true",
-                        "ogcserver": "QGIS server",
-                        "cache_version": "cfe127c3bd2c4d3a80c3f37d6c4eca1a",
-                        "STYLES": ",,,"
-                    },
-                    "serverType": "qgisserver",
-                    "type": "wms",
-                    "opacity": 1,
-                    "useNativeAngle": true
+            "layers": [{
+                "baseURL": "https://geomapfish-demo-dc.camptocamp.com/2.4/mapserv_proxy",
+                "imageFormat": "image/png",
+                "layers": ["osm_hospitals", "osm_firestations", "landuse", "railways"],
+                "customParams": {
+                    "TRANSPARENT": "true",
+                    "ogcserver": "QGIS server",
+                    "cache_version": "cfe127c3bd2c4d3a80c3f37d6c4eca1a",
+                    "STYLES": ",,,"
                 },
-                {
-                    "baseURL": "https://geomapfish-demo-2-6.camptocamp.com/tiles/1.0.0/map/default/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png",
-                    "dimensions": [],
-                    "dimensionParams": {},
-                    "imageFormat": "image/png",
-                    "layer": "map",
-                    "matrices": [
-                        {
-                            "identifier": "0",
-                            "scaleDenominator": 3571428.571428572,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [1, 1]
-                        },
-                        {
-                            "identifier": "1",
-                            "scaleDenominator": 1785714.285714286,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [3, 2]
-                        },
-                        {
-                            "identifier": "2",
-                            "scaleDenominator": 892857.142857143,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [7, 4]
-                        },
-                        {
-                            "identifier": "3",
-                            "scaleDenominator": 357142.85714285716,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [18, 12]
-                        },
-                        {
-                            "identifier": "4",
-                            "scaleDenominator": 178571.42857142858,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [37, 24]
-                        },
-                        {
-                            "identifier": "5",
-                            "scaleDenominator": 71428.57142857143,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [93, 62]
-                        },
-                        {
-                            "identifier": "6",
-                            "scaleDenominator": 35714.28571428572,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [187, 124]
-                        },
-                        {
-                            "identifier": "7",
-                            "scaleDenominator": 17857.14285714286,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [374, 249]
-                        },
-                        {
-                            "identifier": "8",
-                            "scaleDenominator": 7142.857142857143,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [937, 624]
-                        },
-                        {
-                            "identifier": "9",
-                            "scaleDenominator": 3571.4285714285716,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [1874, 1249]
-                        },
-                        {
-                            "identifier": "10",
-                            "scaleDenominator": 1785.7142857142858,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [3749, 2499]
-                        },
-                        {
-                            "identifier": "11",
-                            "scaleDenominator": 892.8571428571429,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [7499, 4999]
-                        },
-                        {
-                            "identifier": "12",
-                            "scaleDenominator": 357.14285714285717,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [18749, 12499]
-                        },
-                        {
-                            "identifier": "13",
-                            "scaleDenominator": 178.57142857142858,
-                            "tileSize": [256, 256],
-                            "topLeftCorner": [420000, 350000],
-                            "matrixSize": [37499, 24999]
-                        }
-                    ],
-                    "matrixSet": "swissgrid_005",
-                    "opacity": 1,
-                    "requestEncoding": "REST",
-                    "style": "default",
-                    "type": "WMTS",
-                    "version": "1.0.0"
-                }
-            ]
+                "serverType": "qgisserver",
+                "type": "wms",
+                "opacity": 1,
+                "useNativeAngle": true
+            }, {
+                "baseURL": "https://geomapfish-demo-dc.camptocamp.com/2.4/tiles/1.0.0/map/default/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png",
+                "dimensions": [],
+                "dimensionParams": {},
+                "imageFormat": "image/png",
+                "layer": "map",
+                "matrices": [{
+                    "identifier": "0",
+                    "scaleDenominator": 3571428.571428572,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [1, 1]
+                }, {
+                    "identifier": "1",
+                    "scaleDenominator": 1785714.285714286,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [3, 2]
+                }, {
+                    "identifier": "2",
+                    "scaleDenominator": 892857.142857143,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [7, 4]
+                }, {
+                    "identifier": "3",
+                    "scaleDenominator": 357142.85714285716,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [18, 12]
+                }, {
+                    "identifier": "4",
+                    "scaleDenominator": 178571.42857142858,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [37, 24]
+                }, {
+                    "identifier": "5",
+                    "scaleDenominator": 71428.57142857143,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [93, 62]
+                }, {
+                    "identifier": "6",
+                    "scaleDenominator": 35714.28571428572,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [187, 124]
+                }, {
+                    "identifier": "7",
+                    "scaleDenominator": 17857.14285714286,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [374, 249]
+                }, {
+                    "identifier": "8",
+                    "scaleDenominator": 7142.857142857143,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [937, 624]
+                }, {
+                    "identifier": "9",
+                    "scaleDenominator": 3571.4285714285716,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [1874, 1249]
+                }, {
+                    "identifier": "10",
+                    "scaleDenominator": 1785.7142857142858,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [3749, 2499]
+                }, {
+                    "identifier": "11",
+                    "scaleDenominator": 892.8571428571429,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [7499, 4999]
+                }, {
+                    "identifier": "12",
+                    "scaleDenominator": 357.14285714285717,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [18749, 12499]
+                }, {
+                    "identifier": "13",
+                    "scaleDenominator": 178.57142857142858,
+                    "tileSize": [256, 256],
+                    "topLeftCorner": [420000, 350000],
+                    "matrixSize": [37499, 24999]
+                }],
+                "matrixSet": "swissgrid_005",
+                "opacity": 1,
+                "requestEncoding": "REST",
+                "style": "default",
+                "type": "WMTS",
+                "version": "1.0.0"
+            }]
         },
         "datasource": [],
         "debug": false,
         "legend": {
-            "classes": [
-                {
-                    "classes": [
-                        {
-                            "name": "Hôpitaux OSM",
-                            "icons": [
-                                "https://geomapfish-demo-2-6.camptocamp.com/mapserv_proxy?ogcserver=QGIS+server&cache_version=cfe127c3bd2c4d3a80c3f37d6c4eca1a&FORMAT=image%2Fpng&TRANSPARENT=true&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&LAYER=osm_hospitals&SCALE=5000&DPI=254&BBOX=537178.3590643996%2C151932.4472046311%2C538157.3193556535%2C153123.07458588586&SRS=EPSG%3A2056&WIDTH=1958&HEIGHT=2381"
-                            ]
-                        },
-                        {
-                            "name": "Caserne de pompiers OSM",
-                            "icons": [
-                                "https://geomapfish-demo-2-6.camptocamp.com/mapserv_proxy?ogcserver=QGIS+server&cache_version=cfe127c3bd2c4d3a80c3f37d6c4eca1a&FORMAT=image%2Fpng&TRANSPARENT=true&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&LAYER=osm_firestations&SCALE=5000&DPI=254&BBOX=537178.3590643996%2C151932.4472046311%2C538157.3193556535%2C153123.07458588586&SRS=EPSG%3A2056&WIDTH=1958&HEIGHT=2381"
-                            ]
-                        },
-                        {
-                            "name": "Utilisation du sol",
-                            "icons": [
-                                "https://geomapfish-demo-2-6.camptocamp.com/mapserv_proxy?ogcserver=QGIS+server&cache_version=cfe127c3bd2c4d3a80c3f37d6c4eca1a&FORMAT=image%2Fpng&TRANSPARENT=true&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&LAYER=landuse&SCALE=5000&DPI=254&BBOX=537178.3590643996%2C151932.4472046311%2C538157.3193556535%2C153123.07458588586&SRS=EPSG%3A2056&WIDTH=1958&HEIGHT=2381"
-                            ]
-                        },
-                        {
-                            "name": "Voies ferrées",
-                            "icons": [
-                                "https://geomapfish-demo-2-6.camptocamp.com/mapserv_proxy?ogcserver=QGIS+server&cache_version=cfe127c3bd2c4d3a80c3f37d6c4eca1a&FORMAT=image%2Fpng&TRANSPARENT=true&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&LAYER=railways&SCALE=5000&DPI=254&BBOX=537178.3590643996%2C151932.4472046311%2C538157.3193556535%2C153123.07458588586&SRS=EPSG%3A2056&WIDTH=1958&HEIGHT=2381"
-                            ]
-                        }
-                    ]
-                }
-            ]
+            "classes": [{
+                "classes": [{
+                    "name": "Hôpitaux OSM",
+                    "icons": ["https://geomapfish-demo-dc.camptocamp.com/2.4/mapserv_proxy?ogcserver=QGIS+server&cache_version=cfe127c3bd2c4d3a80c3f37d6c4eca1a&FORMAT=image%2Fpng&TRANSPARENT=true&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&LAYER=osm_hospitals&SCALE=5000&DPI=254&BBOX=537178.3590643996%2C151932.4472046311%2C538157.3193556535%2C153123.07458588586&SRS=EPSG%3A2056&WIDTH=1958&HEIGHT=2381"]
+                }, {
+                    "name": "Caserne de pompiers OSM",
+                    "icons": ["https://geomapfish-demo-dc.camptocamp.com/2.4/mapserv_proxy?ogcserver=QGIS+server&cache_version=cfe127c3bd2c4d3a80c3f37d6c4eca1a&FORMAT=image%2Fpng&TRANSPARENT=true&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&LAYER=osm_firestations&SCALE=5000&DPI=254&BBOX=537178.3590643996%2C151932.4472046311%2C538157.3193556535%2C153123.07458588586&SRS=EPSG%3A2056&WIDTH=1958&HEIGHT=2381"]
+                }, {
+                    "name": "Utilisation du sol",
+                    "icons": ["https://geomapfish-demo-dc.camptocamp.com/2.4/mapserv_proxy?ogcserver=QGIS+server&cache_version=cfe127c3bd2c4d3a80c3f37d6c4eca1a&FORMAT=image%2Fpng&TRANSPARENT=true&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&LAYER=landuse&SCALE=5000&DPI=254&BBOX=537178.3590643996%2C151932.4472046311%2C538157.3193556535%2C153123.07458588586&SRS=EPSG%3A2056&WIDTH=1958&HEIGHT=2381"]
+                }, {
+                    "name": "Voies ferrées",
+                    "icons": ["https://geomapfish-demo-dc.camptocamp.com/2.4/mapserv_proxy?ogcserver=QGIS+server&cache_version=cfe127c3bd2c4d3a80c3f37d6c4eca1a&FORMAT=image%2Fpng&TRANSPARENT=true&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&LAYER=railways&SCALE=5000&DPI=254&BBOX=537178.3590643996%2C151932.4472046311%2C538157.3193556535%2C153123.07458588586&SRS=EPSG%3A2056&WIDTH=1958&HEIGHT=2381"]
+                }]
+            }]
         }
     },
     "format": "pdf",
diff --git a/project.yaml b/project.yaml
index dd2de014..785823a8 100644
--- a/project.yaml
+++ b/project.yaml
@@ -13,7 +13,6 @@ managed_files:
   - geoportal/Dockerfile
   - geoportal/requirements\.txt
   - ci/config\.yaml
-  - \.github/workflows/rebuild\.yaml
 unmanaged_files:
   - geoportal/geomapfish_geoportal/static-ngeo/js/apps/Controller.*\.js
   - geoportal/geomapfish_geoportal/static-ngeo/js/apps/.*\.html\.ejs
diff --git a/tilegeneration/config.yaml.tmpl b/tilegeneration/config.yaml.tmpl
index 8c1c1c3f..a5924c7e 100644
--- a/tilegeneration/config.yaml.tmpl
+++ b/tilegeneration/config.yaml.tmpl
@@ -1,188 +1,196 @@
 # yaml-language-server: $schema=https://raw.githubusercontent.com/camptocamp/tilecloud-chain/1.16/tilecloud_chain/schema.json
 
 grids:
-    # grid name, I just recommends to add the min resolution because it's common to not generate all the layers at the same resolution.
-    epsg2056_005:
-        # resolutions [required]
-        # Resolutions from eCH-0056 - WMTS-07
-        # https://www.ech.ch/dokument/473ea824-bbcd-43fa-ad0a-c7c84edfa1b8
-        resolutions: [4000, 2000, 1000, 500, 250, 100, 50, 20, 10, 5, 2.5, 1, 0.5, 0.25, 0.1, 0.05]
-        # bbox [required]
-        bbox: [2420000, 1030000, 2900000, 1350000]
-        # srs [required]
-        srs: EPSG:2056
+  # grid name, I just recommends to add the min resolution because it's common to not generate all the layers at the same resolution.
+  epsg2056_005:
+    # resolutions [required]
+    # Resolutions from eCH-0056 - WMTS-07
+    # https://www.ech.ch/dokument/473ea824-bbcd-43fa-ad0a-c7c84edfa1b8
+    resolutions: [4000, 2000, 1000, 500, 250, 100, 50, 20, 10, 5, 2.5, 1, 0.5, 0.25, 0.1, 0.05]
+    # bbox [required]
+    bbox: [2420000, 1030000, 2900000, 1350000]
+    # srs [required]
+    srs: EPSG:2056
 
 caches:
-    local:
-        type: filesystem
-        folder: /var/sig/tiles
-        # for GetCapabilities
-        http_url: ${VISIBLE_WEB_PROTOCOL}://${VISIBLE_WEB_HOST}${VISIBLE_ENTRY_POINT}
-    s3:
-        type: s3
-        bucket: ${TILEGENERATION_S3_BUCKET}
-        folder: ''
-        # for GetCapabilities
-        http_url: ${VISIBLE_WEB_PROTOCOL}://${VISIBLE_WEB_HOST}${VISIBLE_ENTRY_POINT}
-        cache_control: 'public, max-age=14400'
-        host: ${AWS_S3_ENDPOINT}
+  local:
+    type: filesystem
+    folder: /var/sig/tiles
+    # for GetCapabilities
+    http_url: ${VISIBLE_WEB_PROTOCOL}://${VISIBLE_WEB_HOST}${VISIBLE_ENTRY_POINT}
+  s3:
+    type: s3
+    bucket: ${TILEGENERATION_S3_BUCKET}
+    folder: ''
+    # for GetCapabilities
+    http_url: ${VISIBLE_WEB_PROTOCOL}://${VISIBLE_WEB_HOST}${VISIBLE_ENTRY_POINT}
+    cache_control: 'public, max-age=14400'
+    host: ${AWS_S3_ENDPOINT}
 
 # this defines some defaults values for all the layers
 defaults:
-    layer: &layer
-        type: wms
-        grid: epsg2056_005
-        # The minimum resolution to seed, useful to use with mapcache, optional.
-        min_resolution_seed: 5
-        # the URL of the WMS server to used
-        url: ${MAPSERVER_URL}
-        # Set the headers to get the right virtual host, and don't get any cached result
-        headers:
-            Host: '${VISIBLE_WEB_HOST}'
-            Cache-Control: no-cache, no-store
-            Pragma: no-cache
-        # file name extension
-        extension: png
-        # legend file name extension
-        legend_extension: png
-        # the bbox there we want to generate tiles
-        bbox: [2473743, 1074095, 2850904, 1325533]
+  layer: &layer
+    type: wms
+    grid: epsg2056_005
+    # The minimum resolution to seed, useful to use with mapcache, optional.
+    min_resolution_seed: 5
+    # the URL of the WMS server to used
+    url: ${MAPSERVER_URL}
+    # Set the headers to get the right virtual host, and don't get any cached result
+    headers:
+      Host: '${VISIBLE_WEB_HOST}'
+      Cache-Control: no-cache, no-store
+      Pragma: no-cache
+    # file name extension
+    extension: png
+    # legend file name extension
+    legend_extension: png
+    # the bbox there we want to generate tiles
+    bbox: [2473743, 1074095, 2850904, 1325533]
 
-        # mime type used for the WMS request and the WMTS capabilities generation
-        mime_type: image/png
-        # mime type used for the WMS request and the WMTS legend image generation
-        legend_mime: image/png
-        wmts_style: default
-        # the WMTS dimensions definition [default to []]
-        #dimensions:
-        #    -   name: DATE
-        #        # the default value for the WMTS capabilities
-        #        default: '2012'
-        #        # the generated values
-        #        generate: ['2012']
-        #        # all the available values in the WMTS capabilities
-        #        values: ['2012']
-        # the meta tiles definition [default to off]
-        meta: on
-        # the meta tiles size [default to 8]
-        meta_size: 5
-        # the meta tiles buffer [default to 128]
-        meta_buffer: 128
-        # connection an sql to get geometries (in column named geom) where we want to generate tiles
-        # Warn: too complex result can slow down the application
-#    connection: host=localhost port=5432 user=www-data password=www-data dbname=<db>
-#    geoms:
-#        -   sql: <column> AS geom FROM <table>
-        # size and hash used to detect empty tiles and metatiles [optional, default to None]
-        empty_metatile_detection:
-            size: 740
-            hash: 3237839c217b51b8a9644d596982f342f8041546
-        empty_tile_detection:
-            size: 921
-            hash: 1e3da153be87a493c4c71198366485f290cad43c
-        post_process: optipng
+    # mime type used for the WMS request and the WMTS capabilities generation
+    mime_type: image/png
+    # mime type used for the WMS request and the WMTS legend image generation
+    legend_mime: image/png
+    wmts_style: default
+    # the WMTS dimensions definition [default to []]
+    #dimensions:
+    #    -   name: DATE
+    #        # the default value for the WMTS capabilities
+    #        default: '2012'
+    #        # the generated values
+    #        generate: ['2012']
+    #        # all the available values in the WMTS capabilities
+    #        values: ['2012']
+    # the meta tiles definition [default to off]
+    meta: on
+    # the meta tiles size [default to 8]
+    meta_size: 5
+    # the meta tiles buffer [default to 128]
+    meta_buffer: 128
+    # connection an sql to get geometries (in column named geom) where we want to generate tiles
+    # Warn: too complex result can slow down the application
+    #    connection: host=localhost port=5432 user=www-data password=www-data dbname=<db>
+    #    geoms:
+    #        -   sql: <column> AS geom FROM <table>
+    # size and hash used to detect empty tiles and metatiles [optional, default to None]
+    empty_metatile_detection:
+      size: 740
+      hash: 3237839c217b51b8a9644d596982f342f8041546
+    empty_tile_detection:
+      size: 921
+      hash: 1e3da153be87a493c4c71198366485f290cad43c
+    post_process: optipng
 
 layers:
-    map:
-        <<: *layer
-        layers: default
-    map_jpeg:
-        <<: *layer
-        layers: default
-        extension: jpeg
-        mime_type: image/jpeg
-        empty_metatile_detection:
-            size: 66163
-            hash: a9d16a1794586ef92129a2fb41a739451ed09914
-        empty_tile_detection:
-            size: 1651
-            hash: 2892fea0a474228f5d66a534b0b5231d923696da
-        post_process: jpegoptim
+  map:
+    <<: *layer
+    layers: default
+  map_jpeg:
+    <<: *layer
+    layers: default
+    extension: jpeg
+    mime_type: image/jpeg
+    empty_metatile_detection:
+      size: 66163
+      hash: a9d16a1794586ef92129a2fb41a739451ed09914
+    empty_tile_detection:
+      size: 1651
+      hash: 2892fea0a474228f5d66a534b0b5231d923696da
+    post_process: jpegoptim
 
 generation:
-    default_cache: s3
+  default_cache: s3
 
-    # maximum allowed consecutive errors, after it exit [default to 10]
-    maxconsecutive_errors: 10
+  # maximum allowed consecutive errors, after it exit [default to 10]
+  maxconsecutive_errors: 10
 
 redis:
-    socket_timeout: ${REDIS_TIMEOUT}
-    # For standalone version
-    # url: 'redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}'
-    # For OpenShift version
-    sentinels:
-      - - ${REDIS_HOST}
-        - ${REDIS_PORT}
-    service_name: ${REDIS_SERVICENAME}
-    db: ${REDIS_DB}
+  socket_timeout: ${REDIS_TIMEOUT}
+  # For standalone version
+  # url: 'redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}'
+  # For OpenShift version
+  sentinels:
+    - - ${REDIS_HOST}
+      - ${REDIS_PORT}
+  service_name: ${REDIS_SERVICENAME}
+  db: ${REDIS_DB}
 
 # Not used if the previous redis section is not commented out
 sqs:
-    # The region where the SQS queue is
-    region: eu-west-1
-    # The SQS queue name, it should already exists
-    queue: '${TILEGENERATION_SQS_QUEUE}'
+  # The region where the SQS queue is
+  region: eu-west-1
+  # The SQS queue name, it should already exists
+  queue: '${TILEGENERATION_SQS_QUEUE}'
 
 server:
-    wmts_path: tiles
-    static_path: tiles/static
-    admin_path: tiles/admin
-    expires: 8  # 8 hours
-    mapcache_internal: True
-    predefined_commands:
-    -   name: Generation all layers
-        command: generate_tiles --role=master
-    -   name: Generation layer map
-        command: generate_tiles --role=master --layer=map
-    -   name: Generation OpenLayers example
-        command: generate_controller --openlayers
-    -   name: Generate the legend images
-        command: generate_controller --generate-legend-images
+  wmts_path: tiles
+  static_path: tiles/static
+  admin_path: tiles/admin
+  expires: 8 # 8 hours
+  mapcache_internal: True
+  predefined_commands:
+    - name: Generation all layers
+      command: generate-tiles
+    - name: Generation layer map
+      command: generate-tiles --layer=map
+    - name: Get hash layer map
+      command: generate-tiles --get-hash=10/0/0 --layer=map
+    - name: Get cost
+      command: generate-cost
+    - name: Generation OpenLayers example
+      command: generate-controller --openlayers
+    - name: Generate the legend images
+      command: generate-controller --generate-legend-images
+    - name: Dump config
+      command: generate-controller --dump-config
+    - name: Get bbox
+      command: generate-tile --get-bbox=5/5/5
 
 process:
-    optipng_test:
-    -   cmd: optipng -o7 -simulate %(in)s
-    optipng:
-    -   cmd: optipng %(args)s -zc9 -zm8 -zs3 -f5 %(in)s
-        arg:
-            default: '-q'
-            quiet: '-q'
-    jpegoptim:
-    -   cmd: jpegoptim %(args)s --strip-all --all-normal -m 90 %(in)s
-        arg:
-            default: '-q'
-            quiet: '-q'
+  optipng_test:
+    - cmd: optipng -o7 -simulate %(in)s
+  optipng:
+    - cmd: optipng %(args)s -zc9 -zm8 -zs3 -f5 %(in)s
+      arg:
+        default: '-q'
+        quiet: '-q'
+  jpegoptim:
+    - cmd: jpegoptim %(args)s --strip-all --all-normal -m 90 %(in)s
+      arg:
+        default: '-q'
+        quiet: '-q'
 
 openlayers:
-    # srs, center_x, center_y [required]
-    srs: EPSG:2056
-    center_x: 2600000
-    center_y: 1200000
+  # srs, center_x, center_y [required]
+  srs: EPSG:2056
+  center_x: 2600000
+  center_y: 1200000
 
 metadata:
-    title: Camptocamp GeoMapFish demo
-    abstract: Camptocamp GeoMapFish demo
-    servicetype: OGC WMTS
-    keywords:
+  title: Camptocamp GeoMapFish demo
+  abstract: Camptocamp GeoMapFish demo
+  servicetype: OGC WMTS
+  keywords:
     - camptocamp
     - geomapfish
     - demo
-    fees: None
-    access_constraints: None
+  fees: None
+  access_constraints: None
 
 provider:
-    name: Camptocamp
-    url: https://www.camptocamp.com/solutions/geospatial/
-    contact:
-        name: Camtocamp
-        position: Compygny
-        info:
-            phone:
-                voice: +41 21 619 10 10
-            address:
-                delivery: EPFL Innovation Park - Building A
-                city: Lausanne
-                area: VD
-                postal_code: 1015
-                country: Switzerland
-                email: info@camptocamp.com
+  name: Camptocamp
+  url: https://www.camptocamp.com/solutions/geospatial/
+  contact:
+    name: Camtocamp
+    position: Compygny
+    info:
+      phone:
+        voice: +41 21 619 10 10
+      address:
+        delivery: EPFL Innovation Park - Building A
+        city: Lausanne
+        area: VD
+        postal_code: 1015
+        country: Switzerland
+        email: info@camptocamp.com
